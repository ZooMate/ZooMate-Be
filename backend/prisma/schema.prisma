// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  userId   String    @unique
  userPassword String
  userName String
  region   String?
  userDesc String?
  profile  String?

  pets     Pet[]
  mates    Mate[]
  answers  Answer[]
  message  Message[]
  ChatRoom ChatRoom[]
}

model Pet {
  id          Int      @id @default(autoincrement())
  petName     String
  age         Int
  gender      Gender   @default(female)
  isNetering  Boolean
  isPublic    Boolean
  breed       String?
  weight      Float?
  tag         String[] @default([])
  photos      String[]
  category    Category @default(cat)

  ownerId Int
  owner   User @relation(fields: [ownerId], references: [id])
  
  mates    Mate[]
  answers  Answer[]
  attachments Attachment[]
}

enum Gender {
  male
  female
}

enum Category {
  cat
  dog
  reptile
  bird
}

model Mate {
  userId  Int
  user    User @relation(fields: [userId], references: [id])
  
  petId   Int
  pet     Pet  @relation(fields: [petId], references: [id])
  
  @@id([userId, petId]) // 복합 PK 설정
}

model Answer {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  Pet Pet[]
}

model ChatRoom {
  id       Int       @id @default(autoincrement())
  name     String
  messages Message[]
  users    User[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}

model Attachment {
  id        Int      @id @default(autoincrement())
  fileName  String
  fileUrl   String
  fileSize  Int
  fileType  String
  createdAt DateTime @default(now())
  pet      Pet     @relation(fields: [petId], references: [id])
  petId    Int
}
